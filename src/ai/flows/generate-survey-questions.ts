// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview This file defines a Genkit flow for generating survey questions based on a user-provided topic.
 *
 * The flow takes a topic as input and returns a list of suggested survey questions related to that topic.
 * It exports:
 *   - generateSurveyQuestions: An async function that triggers the survey question generation flow.
 *   - GenerateSurveyQuestionsInput: The TypeScript type definition for the input to the flow.
 *   - GenerateSurveyQuestionsOutput: The TypeScript type definition for the output of the flow.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

// Define the schema for the input to the flow.
const GenerateSurveyQuestionsInputSchema = z.object({
  topic: z.string().describe('The topic for which to generate survey questions.'),
});

export type GenerateSurveyQuestionsInput = z.infer<
  typeof GenerateSurveyQuestionsInputSchema
>;

// Define the schema for the output of the flow.
const GenerateSurveyQuestionsOutputSchema = z.object({
  questions: z
    .array(z.string())
    .describe('An array of suggested survey questions related to the topic.'),
});

export type GenerateSurveyQuestionsOutput = z.infer<
  typeof GenerateSurveyQuestionsOutputSchema
>;

// Exported function to trigger the flow.
export async function generateSurveyQuestions(
  input: GenerateSurveyQuestionsInput
): Promise<GenerateSurveyQuestionsOutput> {
  return generateSurveyQuestionsFlow(input);
}

// Define the prompt for generating survey questions.
const generateSurveyQuestionsPrompt = ai.definePrompt({
  name: 'generateSurveyQuestionsPrompt',
  input: {schema: GenerateSurveyQuestionsInputSchema},
  output: {schema: GenerateSurveyQuestionsOutputSchema},
  prompt: `You are an expert survey question generator. Given a topic, you will generate a list of survey questions related to that topic.

Topic: {{{topic}}}

Questions:`, // Handlebars syntax
});

// Define the Genkit flow.
const generateSurveyQuestionsFlow = ai.defineFlow(
  {
    name: 'generateSurveyQuestionsFlow',
    inputSchema: GenerateSurveyQuestionsInputSchema,
    outputSchema: GenerateSurveyQuestionsOutputSchema,
  },
  async input => {
    const {output} = await generateSurveyQuestionsPrompt(input);
    return output!;
  }
);
